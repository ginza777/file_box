# Generated by Django 5.1.4 on 2025-09-02 11:49

import apps.multiparser.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('page_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='Page Count')),
                ('file_size', models.CharField(max_length=50, verbose_name='File Size')),
                ('file_type', models.CharField(max_length=20, verbose_name='File Type')),
                ('short_content_url', models.URLField(blank=True, null=True, verbose_name='Short Content URL')),
                ('content_duration', models.DurationField(blank=True, null=True, verbose_name='Content Duration')),
                ('content_type', models.CharField(choices=[('file', 'File'), ('video', 'Video'), ('audio', 'Audio'), ('presentation', 'Presentation')], default='file', max_length=20, verbose_name='Content Type')),
                ('file_url', models.URLField(blank=True, help_text='Direct link to the document file', null=True, verbose_name='File URL')),
                ('file_path', models.CharField(blank=True, help_text='Path where file is saved locally', max_length=500, null=True, verbose_name='Local File Path')),
                ('file_upload', models.FileField(blank=True, help_text='Uploaded file for processing', null=True, upload_to=apps.multiparser.models.upload_to, verbose_name='File Upload')),
                ('download_status', models.CharField(choices=[('pending', 'Pending'), ('downloading', 'Downloading'), ('downloaded', 'Downloaded'), ('failed', 'Failed'), ('skipped', 'Skipped')], default='pending', max_length=20, verbose_name='Download Status')),
                ('download_started_at', models.DateTimeField(blank=True, null=True, verbose_name='Download Started At')),
                ('download_completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Download Completed At')),
                ('download_error', models.TextField(blank=True, null=True, verbose_name='Download Error')),
                ('file_id', models.CharField(blank=True, help_text='File ID after sending to Telegram channel', max_length=255, null=True, verbose_name='Telegram File ID')),
                ('sent_to_channel', models.BooleanField(default=False, verbose_name='Sent to Channel')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent to Channel At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Seller ID')),
                ('fullname', models.CharField(max_length=200, verbose_name='Full Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Seller',
                'verbose_name_plural': 'Sellers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='Product ID')),
                ('title', models.CharField(max_length=500, verbose_name='Title')),
                ('slug', models.SlugField(max_length=500, unique=True, verbose_name='Slug')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Discount Price')),
                ('discount', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Discount Percentage')),
                ('poster_url', models.URLField(blank=True, null=True, verbose_name='Poster URL')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Views Count')),
                ('content_type', models.CharField(default='file', max_length=20, verbose_name='Content Type')),
                ('demo_link', models.URLField(blank=True, null=True, verbose_name='Demo Link')),
                ('file_url', models.URLField(blank=True, null=True, verbose_name='File URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('document', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='multiparser.document', verbose_name='Document')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='multiparser.seller', verbose_name='Seller')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductView',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('viewed_at', models.DateTimeField(auto_now_add=True, verbose_name='Viewed At')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='multiparser.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Product View',
                'verbose_name_plural': 'Product Views',
                'ordering': ['-viewed_at'],
            },
        ),
    ]
